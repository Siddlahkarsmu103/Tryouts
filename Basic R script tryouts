#This is a single line command

name<-"alex"
name
mail<-"gmail.com"
mail
paste(name,mail,sep="@")

#creating a vector

v<-c("Red","Blue","Violet","Yellow")
v
sort(v)
sort(v, decreasing = TRUE)

#Creating complex vectors
a<-1:10
a
c<-10:-4
c
str(a)

#create a vector using combine function
c(1,2,3)
c(1,7,9)
c("Red","green","yellow")
d<-c(1:5,10.5,"red")
class(d)
d

#Create Vector Using seq

seq(10)

seq(3,20)

seq(3,20,3)

seq(1,9, by=2)

seq(from=4.5, to=2.5, by=-0.2)

seq(0,1,length.out=12) #division

#Application of seq operator

x<-seq(0,4*pi,length.out=200);
y<- sin(x);
plot(x,y)

#creating vectors using rep-1

rep(3,10)
rep(1:3,3)
rep(c(1,2,3),3)
rep(seq(3),3)
rep(seq(3),length.out=5)
rep(seq(3),len=5)
rep(1:4,c(2,1,2,1))

#creating vectors using rep-2
rep(1:4,each=2,len=4)

#Accessing vector elements
a<-(1:10)
a
a[5]
a[5:8]
a[5:3]

#Tail and Head
tail(a)




#Droppingg NA values
a<-c(3,-2,4,NA,-1,8,-4,9,NA,11,3,8,NA)
a[!is.na(a)]



#Challenge 
a<-c(2,3,-1,3,5,2,-3,1)




#Logical Indexing
c(1,2,3)==c(3,2,1)

c(3,4,5)
1%in%c(3,4,5)
c(1,2)%in%c(3,4,5)


#Vector Arithmatic
#find the definition of the operators
a<-c(2,3,4)
mean(a)
median(a)
sum(a)
prod(a)
min(a)
max(a)
cummin(a)
cummax(a)
cumsum(a)
cumprod(a)
diff(a)

#Matrix

#Creating Matrix

matrix(1:12,ncol=4) # 4 columns 3 rows
matrix(1:12,nrow=4) # 3 columns 4 rows
matrix(c(3,9,-1,4,2,6),nrow=2)
matrix(1:12,ncol=4,byrow=TRUE) #byrow = TRUE ,assigns each element from left to right in a row
matrix(1:12,nrow=4,byrow=TRUE)

#Convert Vector to matrix


#Combining Vectors to matrix

a1<-c(1,1,1,1)
a2<-c(2,2,2,2)
rbind(a1,a2) # creates a matrix with 2 rows
cbind(a1,a2) # creates a matrix with 4 rows

#Accessing elements in a matrix

matrix(1:12,ncol=4)

m[1,3]


#Challenge 

a<-matrix(1:20,ncol=4)
a
a[c(3,5),c(2,4)] #3 and 5 rows have the elements and 2 and 4 columns have the values

#rOW AND COLIIMN NAMES

M<-matrix(c(3,9,-1,4,2,6),nrow=2)
rownames(M)<-c("ROW1","ROW2")
colnames(M)<-c("col1","col2","col3")
M
M["ROW2",]
M[,"col2"]

#Matric Arithmatic

M<-matrix(1:12,ncol=4)
M

rowSums(M)
colSums(M)
colMeans(M)
t(M)


N<-matrix(1:4,ncol=2)
N
solve(N)
N*solve(N)


#creating Array

a<-array(c(11:14,21:24,31:34),dim=c(2,2,3))
a
a[,,1] # picks te 1st layer
a[1,,1] #picks the first layer and the 1st row 



#creating a data frame

a<- data.frame(
  
  gender=c("Male","Male","Female"),
  height=c(152,171.5,165),
  weight=c(81,93,78),
  age=c(42,38,26),
  row.names=c("Ally","BOB","Mark")
  )
a

rownames(a)
colnames(a)
nrow(a)
names(a)
ncol(a)

#Accessing Single Component

a$gender
a$height

a[["gender"]]
a[["height"]]

#FilterDataFrame
a[a$gender=="Male",]



subset(a,select =c("gender","age"))

#Add Column to Data Frame

a$name=c('Ally','Belinda','Jane')
a



a<- data.frame(
  
  gender=c("Male","Male","Female"),
  height=c(152,171.5,165),
  weight=c(81,93,78),
  age=c(42,38,26),
  row.names=c("Ally","BOB","Mark")
)
a

c<-rbind(a,b)




#List

a<-list('A'=1:10,'B'=matrix(1:4,ncol=2),'C'="r")
a

unlist(a)

#Merging Lists

list1<-list(1,2,3)
list2<-list("Sun","Mon","Tue")
merged.list <-c(list1,list2)



unlist(list1) # creates a flat atomic vector

#Create a date
xd<-as.Date("2016-03-13")
xd

xd<-as.Date("5 August 2016",format="%d%B%Y")
xd




#----------------------------------------------------------

data("mtcars")
str(mtcars)

plot(mtcars)
plot(c(mtcars$mpg,mtcars$wt))

data("quakes")
str(quakes)

x<-seq(-10,10)
y<-x^2
plot(x,y,'b',main="a parabola",xlab="x",ylab="y")


write.csv(mtcars,"mtcars.csv")
getwd()

mtc<-read.csv("mtcars.csv",header = TRUE)
View(mtc)

#Plot Example

##BoxPlot
x<-seq(-10,10)
y<-x^2
plot(x,y)

plot(x,y,'a')
plot(x,y,'b')
plot(x,y,'c')


data("sleep")
boxplot(sleep$extra~sleep$group)

data("chickwts")
boxplot(chickwts$weight~chickwts$feed)

#Piechart

a<-c(4,5,2,1)
pie(a)

#barchart
a<-a<-c(4,5,2,1)
barplot(a,col=c("yellow","red","blue","green"))

a<-rnorm(1000)
hist(a,breaks = c(-4,-2,0,2,4))


